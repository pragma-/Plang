test_eq(typeof(1==1), 'Boolean')
test_eq(typeof("hi"), 'String')
test_eq(typeof(42),   'Integer')
test_eq(typeof(null), 'Null')

test_eq(typeof(fn null), 'Function () -> Null')
test_eq(whatis(fn null), 'Function () -> Null')

fn f1(a: Number, b: String) -> Boolean
  true

test_eq(typeof(f1), 'Function (Number, String) -> Boolean')
test_eq(whatis(f1), 'Function (a: Number, b: String) -> Boolean')

fn f2(a: Integer = 10, b: Integer = 20)
  a + b

test_eq(typeof(f2), 'Function (Integer, Integer) -> Integer')
test_eq(whatis(f2), 'Function (a: Integer = 10, b: Integer = 20) -> Integer')

fn f3(a, b)
  a + b

test_eq(typeof(f3), "Function (Any, Any) -> Number")
test_eq(whatis(f3), "Function (a: Any, b: Any) -> Number")

fn f4(a, b)
  a ^^ b

test_eq(typeof(f4), "Function (Any, Any) -> String")
test_eq(whatis(f4), "Function (a: Any, b: Any) -> String")

fn f5(a, b)
  a > b

test_eq(typeof(f5), "Function (Any, Any) -> Boolean")
test_eq(whatis(f5), "Function (a: Any, b: Any) -> Boolean")

fn f6(x)
  !x

test_eq(typeof(f6), "Function (Any) -> Boolean")
test_eq(whatis(f6), "Function (x: Any) -> Boolean")
