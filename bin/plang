#!/usr/bin/env perl

# example Plang interpreter script
#
# see the `plang_builtin` script for a demonstration of adding a builtin function

use warnings;
use strict;

use FindBin qw($RealBin);
use lib "$RealBin/../lib";

# use Plang
use Plang::Interpreter;

# The plang() subroutine can used to interpret a string or the STDIN stream,
# depending on whether a string argument was passed or not.

sub plang {
    my ($text) = @_;

    # create Plang object
    my $plang = Plang::Interpreter->new(debug => $ENV{DEBUG});

    if (defined $text and length $text) {
        # if a string argument was provided, interpret the string
        return $plang->interpret_string($text);
    } else {
        # otherwise interpret the standard input stream
        return $plang->interpret_stream(*STDIN);
    }
}

# interpret plang script and exit using returned value

my $ret = plang("@ARGV") // 0;
exit int $ret;
